void mergeSort(int arr[], int start, int end)
{
  if(start<end)
  {
    int mid = (start+end)/2;
    mergeSort(arr, start,mid);
    mergeSort(arr, mid-1,end);
    merge(arr, start,mid,end);
   }
 }
   
 
 void merge(int arr[], int start,int mid, int end)
 {
  int n1= start+mid-1;
  int n2= end-mid;
  // to temp arrays: left and right array
  int l[] = new int[n1];
  int r[] = new int[n2];
  
  for(int i= 0; i<n1; i++){
      l[i] = arr[i];
    }
  for(int j=0; j< n2; j++){
    r[j] = arr[n1+j];
    }
    
    int i=0;j=0;k=0;
    
    while(i<n1 && j< n2){
          if(l[i] < r[j])
            { 
              arr[k] = l[i];
              i++;
              k++;
             }
           else{
               arr[k] =r[j];
               k++;
               j++;
           }
     }
     // value will be left out in left or right array
     
     while(i<n1){
         arr[k] = l[i];
         i++;
         k++;
     }
     
       whileji<n2){
         arr[k] = r[j];
         j++;
         k++;
     }
        
        
     
 }
  
